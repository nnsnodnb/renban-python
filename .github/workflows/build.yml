name: Build

on: [push]

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python environment
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: Set up cache
        uses: actions/cache@v2
        id: cache
        with:
          path: .venv
          key: poetry-venv-${{ matrix.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: |
          python -m ensurepip
          pip install -U pip
          pip install poetry
          poetry config virtualenvs.in-project true
          poetry install --no-root

      - name: Build binary
        run: poetry run pyinstaller renban/renban.py --onefile --noconsole

      - name: Add execution permission
        if: ${{ matrix.os != 'windows-latest' }}
        run: chmod +x ./dist/renban

      - name: Remove renban.app for macOS
        if: ${{ matrix.os == 'macos-latest' }}
        run: rm -rf ./dist/renban.app

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist-${{ matrix.os }}
          path: dist
